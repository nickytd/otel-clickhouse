receivers:
  fluentforward:
    endpoint: 0.0.0.0:24224 # listen on all interfaces; required
  otlp:
    protocols:
      grpc: {}
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otelcol' # Scrape the otelcol metrics
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']
        metric_relabel_configs:
          - source_labels: [ __name__ ]
            regex: '.*grpc_io.*'
            action: drop

exporters:
  debug:
    sampling_initial: 3
    sampling_thereafter: 500
    verbosity: detailed
  clickhouse:
    database: otel # database schema is created automatically by the exporter
    endpoint: clickhouse://clickhouse:9000
    logs_table_name: otel_logs
    traces_table_name: otel_traces
    metrics_table_name: otel_metrics
    ttl: 12h
    timeout: 10s
    sending_queue:
      queue_size: 100
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s


processors:
  batch:
    send_batch_size: 1000
    timeout: 5s

extensions:
  health_check:

service:
  extensions:
    - health_check
  pipelines:
    logs:
      receivers:
        - fluentforward
      processors:
        - batch
      exporters:
        - debug
        - clickhouse
    metrics:
      receivers:
        - prometheus
      processors: []
      exporters:
        - debug
        - clickhouse
    traces:
      receivers:
        - otlp
      processors:
        - batch
      exporters:
        - debug
        - clickhouse
